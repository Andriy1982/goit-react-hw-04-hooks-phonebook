{"version":3,"sources":["Components/Contacts/ContactsStyledComponent.js","Components/Contacts/Contacts.js","Components/ContactForm/ContactFormStyledComponent.js","Components/ContactForm/ContactForm.js","Components/Filter/FilterStyledComponents.js","Components/Filter/Filter.js","Components/App/App.js","index.js"],"names":["List","styled","ul","ListItem","li","Contacts","contacts","onDeleteContact","map","id","name","number","type","onClick","Form","form","FormLabel","label","FormInput","input","FormButton","button","ContactForm","onAddContact","useState","setName","setNumber","handleInput","target","value","onSubmit","e","preventDefault","uuidv4","onChange","placeholder","required","FilterContainer","Filter","onChangeFilter","parseLocalStorage","JSON","parse","localStorage","getItem","App","setContacts","filter","setFilter","useEffect","window","setItem","stringify","visibleContacts","contact","toLowerCase","includes","className","state","some","el","alert","length","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64a1cdde.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  padding: 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { List, ListItem } from './ContactsStyledComponent';\n\nfunction Contacts({ contacts, onDeleteContact }) {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <ListItem key={id}>\n            <span>{name}:</span>\n            <span>{number}</span>\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n\nContacts.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  display: block;\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  display: block;\r\n  width: 200px;\r\n  font-size: 13px;\r\n  padding: 6px 0 4px 10px;\r\n  border: 1px solid #ccc;\r\n  background: #f6f6f6;\r\n  border-radius: 8px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  width: 90px;\r\n  height: 28px;\r\n  border: 1px solid #ccc;\r\n  background: #fff;\r\n  color: #666;\r\n  border-radius: 5px;\r\n  box-shadow: inset 0 2px 2px #ccc;\r\n  background-color: lightgreen;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 2px #ccc;\r\n  }\r\n\r\n  &:active {\r\n    margin-top: 1px;\r\n    margin-bottom: -1px;\r\n    zoom: 1;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './ContactFormStyledComponent';\n\nfunction ContactForm({ onAddContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInput = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddContact({ id: uuidv4(), name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleInput}\n          placeholder=\"Name*\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"number\"\n          value={number}\n          name=\"number\"\n          onChange={handleInput}\n          placeholder=\"111-11-11*\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\r\n\r\nexport const FilterContainer = styled.label`\r\n  font-size: 18px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FilterContainer } from './FilterStyledComponents';\r\n\r\nfunction Filter({ name, onChangeFilter }) {\r\n  return (\r\n    <FilterContainer>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </FilterContainer>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect } from 'react';\n\nimport Contacts from '../Contacts';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\n\nconst parseLocalStorage = () =>\n  JSON.parse(localStorage.getItem('contacts')) ?? [];\n\nexport default function App() {\n  const [contacts, setContacts] = useState(parseLocalStorage);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = contact => {\n    setContacts(state => {\n      if (state.some(el => el.name === contact.name)) {\n        alert(`${contact.name} is already in contacts!`);\n        return;\n      }\n      return [...state, contact];\n    });\n  };\n\n  const handleFilter = filter => {\n    setFilter(filter);\n  };\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  const handleButtonDelete = contactId => {\n    setContacts(state => state.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <section className=\"section\">\n      <h1>Phonebook</h1>\n      <ContactForm onAddContact={addContact} />\n      <h2>Contacts</h2>\n      {contacts.length > 0 && (\n        <Filter name={filter} onChangeFilter={handleFilter} />\n      )}\n      <Contacts\n        contacts={visibleContacts}\n        onDeleteContact={handleButtonDelete}\n      />\n    </section>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}